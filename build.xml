<?xml version="1.0" encoding="UTF-8" ?>

<project name="JSON" default="default" basedir="." > 
	<!-- Create a timestamp -->
	<tstamp>
		<format property="TIME" pattern="dd-mm-yyyy" locale="en,US" />
	</tstamp>
	<!-- Define constants about package for the package MANIFEST file -->
	<property name="vendor.author" value="Rafael Grigorian" />
	<property name="vendor.domain" value="raffi.io" />
	<property name="vendor.id" value="io.raffi" />
	<property name="package.class.path" value="io.raffi.JSON" />
	<property name="package.name" value="io.raffi.JSON" />
	<property name="package.name.full" value="Java JSON Parser" />
	<property name="package.version" value="1.0.0" />
	<!-- Define paths -->
	<property name="library" value="lib" />
	<property name="documentation" value="doc" />
	<property name="source.main" value="src/main/java" />
	<property name="source.test" value="src/test/java" />
	<property name="build.main" value="build/classes/main/java" />
	<property name="build.test" value="build/classes/test/java" />
	<property name="jar.main" value="build/jar" />
	<property name="jar.test" value="build/jar" />
	<property name="jar.main.name" value="JSON.jar" />
	<property name="jar.test.name" value="JSONTest.jar" />
	<property name="results.test" value="results" />
	<!-- Define class path for the test suite -->
	<path id="classpath-test">
		<fileset dir="${jar.main}" includes="${jar.main.name}"/>
		<fileset dir="${library}" includes="**/*.jar"/>
	</path>
	<!-- This target makes all the folders that are needed -->
	<target name="init" >
		<mkdir dir="${library}"/>
		<mkdir dir="${documentation}"/>
		<mkdir dir="${build.main}"/>
		<mkdir dir="${build.test}"/>
		<mkdir dir="${jar.main}"/>
		<mkdir dir="${jar.test}"/>
		<mkdir dir="${results.test}"/>
	</target>
	<!-- Clean everything that can be re-compiled / re-tested -->
	<target name="clean" depends="init" >
		<delete includeEmptyDirs="true" >
			<fileset dir="." includes="**/*.DS_Store"/>
			<fileset dir="${source.main}" includes="**/*.class"/>
			<fileset dir="${source.test}" includes="**/*.class"/>
			<fileset dir="${jar.main}" includes="**/*.jar"/>
			<fileset dir="${jar.test}" includes="**/*.jar"/>
			<fileset dir="${documentation}" includes="**/*"/>
			<fileset dir="${build.main}">
				<include name="*/**"/>
			</fileset>
			<fileset dir="${build.test}">
				<include name="*/**"/>
			</fileset>
			<fileset dir="${results.test}">
				<include name="*/**"/>
			</fileset>
		</delete>
	</target>
	<!-- Build the main package -->
	<target name="build-main" depends="init" >
		<javac srcdir="${source.main}" destdir="${build.main}" includeantruntime="false" >  
			<compilerarg value="-Xlint:unchecked"/> 
			<compilerarg value="-Xdiags:verbose"/> 
		</javac>
	</target>
	<!-- Create the main class package -->
	<target name="jar-main" depends="build-main">
		<jar destfile="${jar.main}/${jar.main.name}" basedir="${build.main}" >
			<manifest>
				<attribute name="Created-By" value="${vendor.author}" />
				<attribute name="Built-By" value="${vendor.author}" />
				<attribute name="Specification-Title" value="${package.name.full}"/>
				<attribute name="Specification-Version" value="${package.version}"/>
				<attribute name="Specification-Ventor" value="${vendor.domain}"/>
				<attribute name="Implementation-Title" value="${package.name}" />
				<attribute name="Implementation-Version" value="${package.version} ${TODAY}"/>
				<attribute name="Implementation-Vendor" value="${vendor.domain}"/>
				<attribute name="Implementation-Vendor-Id" value="${vendor.id}"/>
				<attribute name="Class-Path" value="${package.class.path}" />
			</manifest>
		</jar>
	</target>
	<!-- Build the test source files -->
	<target name="build-test" depends="jar-main" >
		<javac srcdir="${source.test}" destdir="${build.test}" includeantruntime="false" >  
			<classpath refid="classpath-test" />
			<compilerarg value="-Xlint:unchecked"/> 
			<compilerarg value="-Xdiags:verbose"/> 
		</javac>
	</target>
	<!-- Run the JUnit tests and save results -->
	<target name="run-test" depends="build-test">
		<junit haltonfailure="no" >
			<classpath refid="classpath-test" />
			<classpath location="${build.test}" />
			<formatter type="plain" usefile="false" />
			<formatter classname="io.raffi.JSON" type="plain" />
			<batchtest fork="yes" todir="${results.test}">
				<fileset dir="${source.test}">
					<include name="**/*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	<!-- This generates the documentation -->
	<target name="documentation" >
		<javadoc packagenames="${package.class.path}.*"
			sourcepath="${source.main}"
			defaultexcludes="yes"
			destdir="${documentation}"
			author="true"
			version="true"
			use="true"
			windowtitle="Java JSON Parser - Rafael Grigorian">
		</javadoc>
	</target>
	<!-- This is to prepare for the Github release -->
	<target name="release" depends="clean">
		<antcall target="run-test" />
		<antcall target="documentation" />
		<fileset dir="." includes="**/*.DS_Store"/>
		<fileset dir="${source.main}" includes="**/*.class"/>
		<fileset dir="${source.test}" includes="**/*.class"/>
		<fileset dir="${build.main}">
			<include name="*/**"/>
		</fileset>
		<fileset dir="${build.test}">
			<include name="*/**"/>
		</fileset>
	</target>
</project>